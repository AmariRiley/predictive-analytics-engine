package com.analytics;

import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Map;

/**
 * This class generates analysis reports in text format
 */

public class Report {

    public String generateReport(Map<String, String> dataStats, Map<String, String> modelResults, String bestModel) {
        try {
            String time = LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMdd_HHmmss"));
            String file = "reports/analytics_report_" + time + ".txt";

            //Create a directory for the report files if it does not exist
            java.io.File reportDir = new java.io.File("reports");
            if (!reportDir.exists()) {
                reportDir.mkdir();
            }

            FileWriter writer = new FileWriter(file);

            //Write the report header
            writer.write("Predictive Analytics Report\n");
            writer.write("Generated: " + LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss")) + "\n");
            writer.write("=".repeat(50) + "\n\n");

            //Data Overview Section
            writer.write("Data Overview\n");
            writer.write("-".repeat(20) + "\n");
            for (Map.Entry<String, String> entry : dataStats.entrySet()) {
                writer.write(entry.getKey() + ": " + entry.getValue() + "\n");
            }
            writer.write("\n");

            //Model Performance Section
            writer.write("Model Performance\n");
            writer.write("-".repeat(20) + "\n");
            for (Map.Entry<String, String> entry : modelResults.entrySet()) {
                writer.write(entry.getKey() + ":\n");
                writer.write(" " + entry.getValue() + "\n\n");
            }

            //Best Model Section
            writer.write("Recommendation\n");
            writer.write("-".repeat(20) + "\n");
            writer.write("Best performing model: " + bestModel + "\n\n");

            //Key Insights Section
            writer.write("Key Insights\n");
            writer.write("-".repeat(20) + "\n");
            writer.write("\u2022 Dataset contains " + dataStats.get("Total Rows") + " records\n");
            writer.write("\u2022 Analysis completed on " + dataStats.get("Total Columns") + " features\n");
            writer.write("\u2022 Multiple algorithms test for optimal performance\n");
            writer.write("\u2022 Results can be used for predictive modeling\n\n");

            //Next Steps Section
            writer.write("Next Steps\n");
            writer.write("-".repeat(20) + "\n");
            writer.write("1. Validate results with domain experts\n");
            writer.write("2. Consider feature engineering for improvement\n");
            writer.write("3. Test model for new data\n");
            writer.write("4. Deploy model for production use\n\n");

            writer.write("Report generated by Predictive Analytics Engine\n");

            writer.close();
            System.out.println("Report generated: " + file);
            return file;
        } catch (IOException e) {
            System.err.println("Error generating report: " + e.getMessage());
            return null;
        }
    }
}
